{"version":3,"file":"collection.js","sourceRoot":"","sources":["../../src/collection.ts"],"names":[],"mappings":"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","sourcesContent":["import { Connection } from \"./connection\";\nimport { ArrayCursor } from \"./cursor\";\nimport { isArangoError } from \"./error\";\n\nexport enum CollectionType {\n  DOCUMENT_COLLECTION = 2,\n  EDGE_COLLECTION = 3\n}\n\nexport type DocumentHandle =\n  | string\n  | {\n      _key?: string;\n      _id?: string;\n    };\n\nexport type IndexHandle =\n  | string\n  | {\n      id?: string;\n    };\n\nexport interface ImportOptions {\n  type?: null | \"auto\" | \"documents\" | \"array\";\n  fromPrefix?: string;\n  toPrefix?: string;\n  overwrite?: boolean;\n  waitForSync?: boolean;\n  onDuplicate?: \"error\" | \"update\" | \"replace\" | \"ignore\";\n  complete?: boolean;\n  details?: boolean;\n}\n\nexport interface ImportResult {\n  error: false;\n  created: number;\n  errors: number;\n  empty: number;\n  updated: number;\n  ignored: number;\n  details?: string[];\n}\n\nexport interface DocumentReadOptions {\n  graceful?: boolean;\n  allowDirtyRead?: boolean;\n}\n\nexport function isArangoCollection(\n  collection: any\n): collection is ArangoCollection {\n  return Boolean(collection && collection.isArangoCollection);\n}\n\nexport interface ArangoCollection {\n  isArangoCollection: true;\n  name: string;\n}\n\nexport const DOCUMENT_NOT_FOUND = 1202;\nexport const COLLECTION_NOT_FOUND = 1203;\nexport abstract class BaseCollection implements ArangoCollection {\n  isArangoCollection: true = true;\n  name: string;\n  abstract type: CollectionType;\n  protected _idPrefix: string;\n  protected _connection: Connection;\n\n  constructor(connection: Connection, name: string) {\n    this.name = name;\n    this._idPrefix = `${this.name}/`;\n    this._connection = connection;\n    if (this._connection.arangoMajor >= 3) {\n      this.first = undefined!;\n      this.last = undefined!;\n      this.createCapConstraint = undefined!;\n    }\n  }\n\n  protected _documentPath(documentHandle: DocumentHandle) {\n    return `/document/${this._documentHandle(documentHandle)}`;\n  }\n\n  protected _documentHandle(documentHandle: DocumentHandle) {\n    if (typeof documentHandle !== \"string\") {\n      if (documentHandle._id) {\n        return documentHandle._id;\n      }\n      if (documentHandle._key) {\n        return this._idPrefix + documentHandle._key;\n      }\n      throw new Error(\"Document handle must be a document or string\");\n    }\n    if (documentHandle.indexOf(\"/\") === -1) {\n      return this._idPrefix + documentHandle;\n    }\n    return documentHandle;\n  }\n\n  protected _indexHandle(indexHandle: IndexHandle) {\n    if (typeof indexHandle !== \"string\") {\n      if (indexHandle.id) {\n        return indexHandle.id;\n      }\n      throw new Error(\"Index handle must be a index or string\");\n    }\n    if (indexHandle.indexOf(\"/\") === -1) {\n      return this._idPrefix + indexHandle;\n    }\n    return indexHandle;\n  }\n\n  protected _get(path: string, qs?: any) {\n    return this._connection.request(\n      { path: `/_api/collection/${this.name}/${path}`, qs },\n      res => res.body\n    );\n  }\n\n  protected _put(path: string, body: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: `/_api/collection/${this.name}/${path}`,\n        body\n      },\n      res => res.body\n    );\n  }\n\n  get() {\n    return this._connection.request(\n      { path: `/_api/collection/${this.name}` },\n      res => res.body\n    );\n  }\n\n  exists(): Promise<boolean> {\n    return this.get().then(\n      () => true,\n      err => {\n        if (isArangoError(err) && err.errorNum === COLLECTION_NOT_FOUND) {\n          return false;\n        }\n        throw err;\n      }\n    );\n  }\n\n  create(properties?: any) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/collection\",\n        body: {\n          ...properties,\n          name: this.name,\n          type: this.type\n        }\n      },\n      res => res.body\n    );\n  }\n\n  properties() {\n    return this._get(\"properties\");\n  }\n\n  count() {\n    return this._get(\"count\");\n  }\n\n  figures() {\n    return this._get(\"figures\");\n  }\n\n  revision() {\n    return this._get(\"revision\");\n  }\n\n  checksum(opts?: any) {\n    return this._get(\"checksum\", opts);\n  }\n\n  load(count?: boolean) {\n    return this._put(\n      \"load\",\n      typeof count === \"boolean\" ? { count: count } : undefined\n    );\n  }\n\n  unload() {\n    return this._put(\"unload\", undefined);\n  }\n\n  setProperties(properties: any) {\n    return this._put(\"properties\", properties);\n  }\n\n  async rename(name: string) {\n    const result = await this._connection.request(\n      {\n        method: \"PUT\",\n        path: `/_api/collection/${this.name}/rename`,\n        body: { name }\n      },\n      res => res.body\n    );\n    this.name = name;\n    this._idPrefix = `${name}/`;\n    return result;\n  }\n\n  rotate() {\n    return this._put(\"rotate\", undefined);\n  }\n\n  truncate() {\n    return this._put(\"truncate\", undefined);\n  }\n\n  drop(opts?: any) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/_api/collection/${this.name}`,\n        qs: opts\n      },\n      res => res.body\n    );\n  }\n\n  documentExists(documentHandle: DocumentHandle): Promise<boolean> {\n    return this._connection\n      .request(\n        {\n          method: \"HEAD\",\n          path: `/_api/${this._documentPath(documentHandle)}`\n        },\n        () => true\n      )\n      .catch(err => {\n        if (err.statusCode === 404) {\n          return false;\n        }\n        throw err;\n      });\n  }\n\n  document(documentHandle: DocumentHandle, graceful: boolean): Promise<any>;\n  document(\n    documentHandle: DocumentHandle,\n    opts?: DocumentReadOptions\n  ): Promise<any>;\n  document(\n    documentHandle: DocumentHandle,\n    opts: boolean | DocumentReadOptions = {}\n  ): Promise<any> {\n    if (typeof opts === \"boolean\") {\n      opts = { graceful: opts };\n    }\n    const { allowDirtyRead = undefined, graceful = false } = opts;\n    const result = this._connection.request(\n      { path: `/_api/${this._documentPath(documentHandle)}`, allowDirtyRead },\n      res => res.body\n    );\n    if (!graceful) return result;\n    return result.catch(err => {\n      if (isArangoError(err) && err.errorNum === DOCUMENT_NOT_FOUND) {\n        return null;\n      }\n      throw err;\n    });\n  }\n\n  replace(documentHandle: DocumentHandle, newValue: any, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev && this._connection.arangoMajor >= 3) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: `/_api/${this._documentPath(documentHandle)}`,\n        body: newValue,\n        qs: opts,\n        headers\n      },\n      res => res.body\n    );\n  }\n\n  update(documentHandle: DocumentHandle, newValue: any, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev && this._connection.arangoMajor >= 3) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    return this._connection.request(\n      {\n        method: \"PATCH\",\n        path: `/_api/${this._documentPath(documentHandle)}`,\n        body: newValue,\n        qs: opts,\n        headers\n      },\n      res => res.body\n    );\n  }\n\n  bulkUpdate(newValues: any, opts?: any) {\n    return this._connection.request(\n      {\n        method: \"PATCH\",\n        path: `/_api/document/${this.name}`,\n        body: newValues,\n        qs: opts\n      },\n      res => res.body\n    );\n  }\n\n  remove(documentHandle: DocumentHandle, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev && this._connection.arangoMajor >= 3) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/_api/${this._documentPath(documentHandle)}`,\n        qs: opts,\n        headers\n      },\n      res => res.body\n    );\n  }\n\n  list(type: string = \"id\") {\n    if (this._connection.arangoMajor <= 2) {\n      return this._connection.request(\n        {\n          path: \"/_api/document\",\n          qs: { type, collection: this.name }\n        },\n        res => res.body.documents\n      );\n    }\n\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/all-keys\",\n        body: { type, collection: this.name }\n      },\n      res => res.body.result\n    );\n  }\n\n  all(opts?: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/all\",\n        body: {\n          ...opts,\n          collection: this.name\n        }\n      },\n      res => new ArrayCursor(this._connection, res.body, res.host)\n    );\n  }\n\n  any() {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/any\",\n        body: { collection: this.name }\n      },\n      res => res.body.document\n    );\n  }\n\n  first(opts?: any) {\n    if (typeof opts === \"number\") {\n      opts = { count: opts };\n    }\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/first\",\n        body: {\n          ...opts,\n          collection: this.name\n        }\n      },\n      res => res.body.result\n    );\n  }\n\n  last(opts?: any) {\n    if (typeof opts === \"number\") {\n      opts = { count: opts };\n    }\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/last\",\n        body: {\n          ...opts,\n          collection: this.name\n        }\n      },\n      res => res.body.result\n    );\n  }\n\n  byExample(example: any, opts?: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/by-example\",\n        body: {\n          ...opts,\n          example,\n          collection: this.name\n        }\n      },\n      res => new ArrayCursor(this._connection, res.body, res.host)\n    );\n  }\n\n  firstExample(example: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/first-example\",\n        body: {\n          example,\n          collection: this.name\n        }\n      },\n      res => res.body.document\n    );\n  }\n\n  removeByExample(example: any, opts?: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/remove-by-example\",\n        body: {\n          ...opts,\n          example,\n          collection: this.name\n        }\n      },\n      res => res.body\n    );\n  }\n\n  replaceByExample(example: any, newValue: any, opts?: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/replace-by-example\",\n        body: {\n          ...opts,\n          example,\n          newValue,\n          collection: this.name\n        }\n      },\n      res => res.body\n    );\n  }\n\n  updateByExample(example: any, newValue: any, opts?: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/update-by-example\",\n        body: {\n          ...opts,\n          example,\n          newValue,\n          collection: this.name\n        }\n      },\n      res => res.body\n    );\n  }\n\n  lookupByKeys(keys: string[]) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/lookup-by-keys\",\n        body: {\n          keys,\n          collection: this.name\n        }\n      },\n      res => res.body.documents\n    );\n  }\n\n  removeByKeys(keys: string[], options: any) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/remove-by-keys\",\n        body: {\n          options,\n          keys,\n          collection: this.name\n        }\n      },\n      res => res.body\n    );\n  }\n\n  import(\n    data: Buffer | Blob | string | any[],\n    { type = \"auto\", ...opts }: ImportOptions = {}\n  ): Promise<ImportResult> {\n    if (Array.isArray(data)) {\n      data = data.map(line => JSON.stringify(line)).join(\"\\r\\n\") + \"\\r\\n\";\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/import\",\n        body: data,\n        isBinary: true,\n        qs: {\n          type: type === null ? undefined : type,\n          ...opts,\n          collection: this.name\n        }\n      },\n      res => res.body\n    );\n  }\n\n  indexes() {\n    return this._connection.request(\n      {\n        path: \"/_api/index\",\n        qs: { collection: this.name }\n      },\n      res => res.body.indexes\n    );\n  }\n\n  index(indexHandle: IndexHandle) {\n    return this._connection.request(\n      { path: `/_api/index/${this._indexHandle(indexHandle)}` },\n      res => res.body\n    );\n  }\n\n  createIndex(details: any) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/index\",\n        body: details,\n        qs: { collection: this.name }\n      },\n      res => res.body\n    );\n  }\n\n  dropIndex(indexHandle: IndexHandle) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/_api/index/${this._indexHandle(indexHandle)}`\n      },\n      res => res.body\n    );\n  }\n\n  createCapConstraint(opts?: any) {\n    if (typeof opts === \"number\") {\n      opts = { size: opts };\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/index\",\n        body: { ...opts, type: \"cap\" },\n        qs: { collection: this.name }\n      },\n      res => res.body\n    );\n  }\n\n  createHashIndex(fields: string[] | string, opts?: any) {\n    if (typeof fields === \"string\") {\n      fields = [fields];\n    }\n    if (typeof opts === \"boolean\") {\n      opts = { unique: opts };\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/index\",\n        body: { unique: false, ...opts, type: \"hash\", fields: fields },\n        qs: { collection: this.name }\n      },\n      res => res.body\n    );\n  }\n\n  createSkipList(fields: string[] | string, opts?: any) {\n    if (typeof fields === \"string\") {\n      fields = [fields];\n    }\n    if (typeof opts === \"boolean\") {\n      opts = { unique: opts };\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/index\",\n        body: { unique: false, ...opts, type: \"skiplist\", fields: fields },\n        qs: { collection: this.name }\n      },\n      res => res.body\n    );\n  }\n\n  createPersistentIndex(fields: string[] | string, opts?: any) {\n    if (typeof fields === \"string\") {\n      fields = [fields];\n    }\n    if (typeof opts === \"boolean\") {\n      opts = { unique: opts };\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/index\",\n        body: { unique: false, ...opts, type: \"persistent\", fields: fields },\n        qs: { collection: this.name }\n      },\n      res => res.body\n    );\n  }\n\n  createGeoIndex(fields: string[] | string, opts?: any) {\n    if (typeof fields === \"string\") {\n      fields = [fields];\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/index\",\n        body: { ...opts, fields, type: \"geo\" },\n        qs: { collection: this.name }\n      },\n      res => res.body\n    );\n  }\n\n  createFulltextIndex(fields: string[] | string, minLength?: number) {\n    if (typeof fields === \"string\") {\n      fields = [fields];\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/index\",\n        body: { fields, minLength, type: \"fulltext\" },\n        qs: { collection: this.name }\n      },\n      res => res.body\n    );\n  }\n\n  fulltext(attribute: any, query: any, opts: any = {}) {\n    if (opts.index) opts.index = this._indexHandle(opts.index);\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/simple/fulltext\",\n        body: {\n          ...opts,\n          attribute,\n          query,\n          collection: this.name\n        }\n      },\n      res => new ArrayCursor(this._connection, res.body, res.host)\n    );\n  }\n}\n\nexport interface DocumentSaveOptions {\n  waitForSync?: boolean;\n  returnNew?: boolean;\n  returnOld?: boolean;\n  overwrite?: boolean;\n  silent?: boolean;\n}\n\nexport class DocumentCollection extends BaseCollection {\n  type = CollectionType.DOCUMENT_COLLECTION;\n  constructor(connection: Connection, name: string) {\n    super(connection, name);\n  }\n\n  save(data: any, opts?: DocumentSaveOptions | boolean) {\n    if (typeof opts === \"boolean\") {\n      opts = { returnNew: opts };\n    }\n\n    if (this._connection.arangoMajor <= 2) {\n      return this._connection.request(\n        {\n          method: \"POST\",\n          path: \"/_api/document\",\n          body: data,\n          qs: {\n            ...opts,\n            collection: this.name\n          }\n        },\n        res => res.body\n      );\n    }\n\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: `/_api/document/${this.name}`,\n        body: data,\n        qs: opts\n      },\n      res => res.body\n    );\n  }\n}\n\nexport class EdgeCollection extends BaseCollection {\n  type = CollectionType.EDGE_COLLECTION;\n\n  constructor(connection: Connection, name: string) {\n    super(connection, name);\n  }\n\n  protected _documentPath(documentHandle: DocumentHandle) {\n    if (this._connection.arangoMajor < 3) {\n      return `edge/${this._documentHandle(documentHandle)}`;\n    }\n    return `document/${this._documentHandle(documentHandle)}`;\n  }\n\n  edge(documentHandle: DocumentHandle, graceful: boolean): Promise<any>;\n  edge(\n    documentHandle: DocumentHandle,\n    opts?: DocumentReadOptions\n  ): Promise<any>;\n  edge(\n    documentHandle: DocumentHandle,\n    opts: boolean | DocumentReadOptions = {}\n  ): Promise<any> {\n    if (typeof opts === \"boolean\") {\n      opts = { graceful: opts };\n    }\n    return this.document(documentHandle, opts);\n  }\n\n  save(data: any, opts?: DocumentSaveOptions | boolean): Promise<any>;\n  save(\n    data: any,\n    fromId: DocumentHandle,\n    toId: DocumentHandle,\n    opts?: DocumentSaveOptions | boolean\n  ): Promise<any>;\n  save(\n    data: any,\n    fromIdOrOpts?: DocumentHandle | DocumentSaveOptions | boolean,\n    toId?: DocumentHandle,\n    opts?: DocumentSaveOptions | boolean\n  ) {\n    if (toId !== undefined) {\n      data._from = this._documentHandle(fromIdOrOpts as DocumentHandle);\n      data._to = this._documentHandle(toId!);\n    } else if (fromIdOrOpts !== undefined) {\n      opts = fromIdOrOpts as DocumentSaveOptions | boolean;\n    }\n    if (typeof opts === \"boolean\") {\n      opts = { returnNew: opts };\n    }\n    if (this._connection.arangoMajor <= 2) {\n      return this._connection.request(\n        {\n          method: \"POST\",\n          path: \"/_api/edge\",\n          body: data,\n          qs: {\n            ...opts,\n            collection: this.name,\n            from: data._from,\n            to: data._to\n          }\n        },\n        res => res.body\n      );\n    }\n\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/document\",\n        body: data,\n        qs: {\n          ...opts,\n          collection: this.name\n        }\n      },\n      res => res.body\n    );\n  }\n\n  protected _edges(documentHandle: DocumentHandle, direction: any) {\n    return this._connection.request(\n      {\n        path: `/_api/edges/${this.name}`,\n        qs: {\n          direction,\n          vertex: this._documentHandle(documentHandle)\n        }\n      },\n      res => res.body.edges\n    );\n  }\n\n  edges(vertex: DocumentHandle) {\n    return this._edges(vertex, undefined);\n  }\n\n  inEdges(vertex: DocumentHandle) {\n    return this._edges(vertex, \"in\");\n  }\n\n  outEdges(vertex: DocumentHandle) {\n    return this._edges(vertex, \"out\");\n  }\n\n  traversal(startVertex: DocumentHandle, opts?: any) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/traversal\",\n        body: {\n          ...opts,\n          startVertex,\n          edgeCollection: this.name\n        }\n      },\n      res => res.body.result\n    );\n  }\n}\n\nexport function constructCollection(connection: Connection, data: any) {\n  const Collection =\n    data.type === CollectionType.EDGE_COLLECTION\n      ? EdgeCollection\n      : DocumentCollection;\n  return new Collection(connection, data.name);\n}\n"]}