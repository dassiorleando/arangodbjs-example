{"version":3,"file":"request.web.js","sourceRoot":"","sources":["../../../src/util/request.web.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6BAA6D;AAC7D,yCAAsC;AAOtC,+BAAwB;AAEX,QAAA,SAAS,GAAG,IAAI,CAAC;AAE9B,SAAS,IAAI,CAAI,GAAM,EAAE,IAAiB;IACxC,MAAM,MAAM,GAAG,EAAO,CAAC;IACvB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAc,CAAC;YAAE,SAAS;QAC5C,MAAM,CAAC,GAAc,CAAC,GAAG,GAAG,CAAC,GAAc,CAAC,CAAC;KAC9C;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAgB,aAAa,CAAC,OAAe,EAAE,YAAiB;IAC9D,MAAM,yBAA6C,EAA7C,EAAE,IAAI,OAAuC,EAArC,mCAAqC,CAAC;IACpD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE;QACjC,WAAW;QACX,gBAAgB;QAChB,YAAY;KACb,CAAC,CAAC;IACH,OAAO,SAAS,OAAO,CACrB,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAkB,EACrE,EAA6B;QAE7B,MAAM,QAAQ,qBACT,YAAY,IACf,QAAQ,EAAE,GAAG,CAAC,QAAQ;gBACpB,CAAC,CAAC,YAAY,CAAC,QAAQ;oBACrB,CAAC,CAAC,mBAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC;oBAC/C,CAAC,CAAC,GAAG,CAAC,QAAQ;gBAChB,CAAC,CAAC,YAAY,CAAC,QAAQ,EACzB,MAAM,EAAE,GAAG,CAAC,MAAM;gBAChB,CAAC,CAAC,YAAY,CAAC,MAAM;oBACnB,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;oBACjD,CAAC,CAAC,GAAG,CAAC,MAAM;gBACd,CAAC,CAAC,YAAY,CAAC,MAAM,GACxB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;YAC7B,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,EAAE,CAAC;SAC7D;QAED,IAAI,QAAQ,GAA8B,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACrD,QAAQ,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC;YAC3B,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACf,CAAC,CAAC;QACF,MAAM,GAAG,GAAG,aAAG,iBAEX,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,IACzC,OAAO,IACV,GAAG,EAAE,YAAS,CAAC,QAAQ,CAAC,EACxB,eAAe,EAAE,IAAI,EACrB,MAAM,EAAE,IAAI,EACZ,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO,KAET,CAAC,GAAiB,EAAE,GAAS,EAAE,EAAE;YAC/B,IAAI,CAAC,GAAG,EAAE;gBACR,IAAI,CAAC,GAAG,CAAC,IAAI;oBAAE,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;gBAC7B,QAAQ,CAAC,IAAI,EAAE,GAAuB,CAAC,CAAC;aACzC;iBAAM;gBACL,MAAM,KAAK,GAAG,GAAoB,CAAC;gBACnC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;gBACpB,QAAQ,CAAC,KAAK,CAAC,CAAC;aACjB;QACH,CAAC,CACF,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAxDD,sCAwDC","sourcesContent":["import { format as formatUrl, parse as parseUrl } from \"url\";\nimport { joinPath } from \"./joinPath\";\nimport {\n  ArangojsError,\n  ArangojsResponse,\n  RequestOptions\n} from \"./request.node\";\nimport { Errback } from \"./types\";\nimport xhr from \"./xhr\";\n\nexport const isBrowser = true;\n\nfunction omit<T>(obj: T, keys: (keyof T)[]): T {\n  const result = {} as T;\n  for (const key of Object.keys(obj)) {\n    if (keys.includes(key as keyof T)) continue;\n    result[key as keyof T] = obj[key as keyof T];\n  }\n  return result;\n}\n\nexport function createRequest(baseUrl: string, agentOptions: any) {\n  const { auth, ...baseUrlParts } = parseUrl(baseUrl);\n  const options = omit(agentOptions, [\n    \"keepAlive\",\n    \"keepAliveMsecs\",\n    \"maxSockets\"\n  ]);\n  return function request(\n    { method, url, headers, body, timeout, expectBinary }: RequestOptions,\n    cb: Errback<ArangojsResponse>\n  ) {\n    const urlParts = {\n      ...baseUrlParts,\n      pathname: url.pathname\n        ? baseUrlParts.pathname\n          ? joinPath(baseUrlParts.pathname, url.pathname)\n          : url.pathname\n        : baseUrlParts.pathname,\n      search: url.search\n        ? baseUrlParts.search\n          ? `${baseUrlParts.search}&${url.search.slice(1)}`\n          : url.search\n        : baseUrlParts.search\n    };\n    if (!headers[\"authorization\"]) {\n      headers[\"authorization\"] = `Basic ${btoa(auth || \"root:\")}`;\n    }\n\n    let callback: Errback<ArangojsResponse> = (err, res) => {\n      callback = () => undefined;\n      cb(err, res);\n    };\n    const req = xhr(\n      {\n        responseType: expectBinary ? \"blob\" : \"text\",\n        ...options,\n        url: formatUrl(urlParts),\n        withCredentials: true,\n        useXDR: true,\n        body,\n        method,\n        headers,\n        timeout\n      },\n      (err: Error | null, res?: any) => {\n        if (!err) {\n          if (!res.body) res.body = \"\";\n          callback(null, res as ArangojsResponse);\n        } else {\n          const error = err as ArangojsError;\n          error.request = req;\n          callback(error);\n        }\n      }\n    );\n  };\n}\n"]}